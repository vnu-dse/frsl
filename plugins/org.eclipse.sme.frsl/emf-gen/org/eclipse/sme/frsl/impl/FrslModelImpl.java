/**
 * generated by Xtext 2.25.0
 */
package org.eclipse.sme.frsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.ocl.pivot.internal.ModelImpl;
import org.eclipse.sme.frsl.Actor;
import org.eclipse.sme.frsl.Extend;
import org.eclipse.sme.frsl.FrslModel;
import org.eclipse.sme.frsl.FrslPackage;
import org.eclipse.sme.frsl.Usecase;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.eclipse.sme.frsl.impl.FrslModelImpl#getActor <em>Actor</em>}</li>
 *   <li>{@link org.eclipse.sme.frsl.impl.FrslModelImpl#getUsecase <em>Usecase</em>}</li>
 *   <li>{@link org.eclipse.sme.frsl.impl.FrslModelImpl#getUcExtend <em>Uc Extend</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FrslModelImpl extends ModelImpl implements FrslModel {
	/**
	 * The cached value of the '{@link #getActor() <em>Actor</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getActor()
	 * @generated
	 * @ordered
	 */
	protected EList<Actor> actor;

	/**
	 * The cached value of the '{@link #getUsecase() <em>Usecase</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getUsecase()
	 * @generated
	 * @ordered
	 */
	protected EList<Usecase> usecase;

	/**
	 * The cached value of the '{@link #getUcExtend() <em>Uc Extend</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getUcExtend()
	 * @generated
	 * @ordered
	 */
	protected EList<Extend> ucExtend;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FrslModelImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return FrslPackage.Literals.FRSL_MODEL;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EList<Actor> getActor() {
		if (actor == null) {
			actor = new EObjectContainmentEList<Actor>(Actor.class, this, FrslPackage.FRSL_MODEL__ACTOR);
		}
		return actor;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EList<Usecase> getUsecase() {
		if (usecase == null) {
			usecase = new EObjectContainmentEList<Usecase>(Usecase.class, this, FrslPackage.FRSL_MODEL__USECASE);
		}
		return usecase;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EList<Extend> getUcExtend() {
		if (ucExtend == null) {
			ucExtend = new EObjectContainmentEList<Extend>(Extend.class, this, FrslPackage.FRSL_MODEL__UC_EXTEND);
		}
		return ucExtend;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
		case FrslPackage.FRSL_MODEL__ACTOR:
			return ((InternalEList<?>) getActor()).basicRemove(otherEnd, msgs);
		case FrslPackage.FRSL_MODEL__USECASE:
			return ((InternalEList<?>) getUsecase()).basicRemove(otherEnd, msgs);
		case FrslPackage.FRSL_MODEL__UC_EXTEND:
			return ((InternalEList<?>) getUcExtend()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
		case FrslPackage.FRSL_MODEL__ACTOR:
			return getActor();
		case FrslPackage.FRSL_MODEL__USECASE:
			return getUsecase();
		case FrslPackage.FRSL_MODEL__UC_EXTEND:
			return getUcExtend();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
		case FrslPackage.FRSL_MODEL__ACTOR:
			getActor().clear();
			getActor().addAll((Collection<? extends Actor>) newValue);
			return;
		case FrslPackage.FRSL_MODEL__USECASE:
			getUsecase().clear();
			getUsecase().addAll((Collection<? extends Usecase>) newValue);
			return;
		case FrslPackage.FRSL_MODEL__UC_EXTEND:
			getUcExtend().clear();
			getUcExtend().addAll((Collection<? extends Extend>) newValue);
			return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
		case FrslPackage.FRSL_MODEL__ACTOR:
			getActor().clear();
			return;
		case FrslPackage.FRSL_MODEL__USECASE:
			getUsecase().clear();
			return;
		case FrslPackage.FRSL_MODEL__UC_EXTEND:
			getUcExtend().clear();
			return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
		case FrslPackage.FRSL_MODEL__ACTOR:
			return actor != null && !actor.isEmpty();
		case FrslPackage.FRSL_MODEL__USECASE:
			return usecase != null && !usecase.isEmpty();
		case FrslPackage.FRSL_MODEL__UC_EXTEND:
			return ucExtend != null && !ucExtend.isEmpty();
		}
		return super.eIsSet(featureID);
	}

} //FrslModelImpl
